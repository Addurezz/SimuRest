@startuml
'https://plantuml.com/class-diagram


package "Runtime" {
    class SimuServer {
        - _memory: ServerMemory
        - _handler: RequestHandler
        - _router: Router
        - _writer: ResponseWriter
        - _listener: HttpListener
        
        + SimuServer(m : ServerMemory, h : RequestHandler, r : Router, w : ResponseWriter)
        + Handle(ctx : HttpListenerContext) : void
    }
    
    class SimuRequest {
        + Path: string
        + Method: HttpMethod
    }
    class SimuResponse {
        + StatusCode: int
        + Body: string
        + BadRequest: SimuResponse <<static>> 
        + NotFound: SimuResponse <<static>> 
        
        + SimuResponse(status: int, body: string)
    }
    
    class RequestHandler {
        - _router: Router
        - _writer: ResponseWriter
        - _parser: Parser
    
        + Handle(context: HttpListenerContext): void
        + GetSimuRequest(ctx : IHttpContext) : SimuRequest
        + GetSimuResponseFromRouter(req : SimuRequest) : SimuResponse
        + WriteToStream(ctx : IHttpContext, resp SimuResponse) : void
    }
    
    class ResponseWriter {
        + Write(ctx: IHttpContext, response: SimuResponse): void
    }
    class Parser {
        + Parse(context: IHttpContext): SimuRequest
    }
    
    
    
    interface IHttpContext {
        + Url: Uri
        + Method: string
    }
    
    class ServerMemory {
        - _memory : Dictionary<String, object?> 
        
        + Save(key : string, data : object?) : void
        + Get(key : string) : object? 
    }
   
}

package RoutingSystem {
    class Router {
        + Table: RouteTable
    
        + Handle(request: SimuRequest): SimuResponse
    }
    
    class RouteTable {
        + Routes: List<RouteRule>
        
        + Match(request: SimuRequest): RouteRule
    }
    
    class Route {
        + Method: HttpMethod
        + Path: string
        
        + Route(method: HttpMethod, path: string)
    }
    
    class RouteRule {
        + Route: Route
        + Handler: func<SimuRequest, SimuResponse>
    }
}

package "Builder API" {
    class SimuServerBuilder {
        + Server: SimuServer
        + Setup(method: HttpMethod, path: string): RouteRuleBuilder
    }
    
    class RouteRuleBuilder {
        - _serverBuilder: SimuServerBuilder
        - _routeRule: RouteRule
        
        + Responds(func: func<SimuRequest, SimuResponse>): RouteRuleBuilder
        + End(): SimuServerBuilder
    }
}

SimuServer --* SimuServerBuilder
RouteRuleBuilder *-- SimuServerBuilder
SimuServer *-- ServerMemory

RouteRuleBuilder *-- RouteRule
RouteRule *-- Route

RequestHandler --> ServerMemory
RequestHandler *-- Router
Router *-- RouteTable
RequestHandler *-- ResponseWriter
RequestHandler *-- Parser
RequestHandler --> IHttpContext : uses
RequestHandler ..> SimuRequest
RequestHandler ..> SimuResponse

Parser --> IHttpContext : uses
ResponseWriter --> IHttpContext : uses

SimuServer *-- RequestHandler
SimuServer *-- Router

RouteTable o-- RouteRule

@enduml
